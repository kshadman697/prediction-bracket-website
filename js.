// app.js

// Sample bracket data (you can change this)
const bracketData = [
    { match: "Team A vs Team B", teams: ["Team A", "Team B"] },
    { match: "Team C vs Team D", teams: ["Team C", "Team D"] }
  ];
  
  // Sample leaderboard (you can replace with data from Firebase)
  let leaderboard = [
    { username: "User1", points: 10 },
    { username: "User2", points: 5 },
  ];
  
  // Function to display the bracket
  function renderBracket() {
    const bracketContainer = document.getElementById("bracket-container");
    bracketData.forEach(match => {
      const matchElement = document.createElement("div");
      matchElement.classList.add("bracket");
  
      const matchLabel = document.createElement("div");
      matchLabel.classList.add("match");
      matchLabel.textContent = match.match;
      matchElement.appendChild(matchLabel);
  
      match.teams.forEach(team => {
        const teamButton = document.createElement("button");
        teamButton.textContent = team;
        teamButton.setAttribute("data-team", team);
        matchElement.appendChild(teamButton);
      });
  
      bracketContainer.appendChild(matchElement);
    });
  }
  
  // Function to display the leaderboard
  function renderLeaderboard() {
    const leaderboardContainer = document.getElementById("leaderboard");
    leaderboardContainer.innerHTML = ""; // Clear previous leaderboard
  
    leaderboard.sort((a, b) => b.points - a.points); // Sort by points
    leaderboard.forEach(entry => {
      const entryElement = document.createElement("p");
      entryElement.textContent = `${entry.username}: ${entry.points} points`;
      leaderboardContainer.appendChild(entryElement);
    });
  }
  
  // Handle prediction form submission
  document.getElementById("prediction-form").addEventListener("submit", function(event) {
    event.preventDefault();
  
    // Get the selected predictions
    const selectedPredictions = [];
    const buttons = document.querySelectorAll("#bracket-container button");
    buttons.forEach(button => {
      if (button.style.backgroundColor === "green") {  // Green means selected
        selectedPredictions.push(button.textContent);
      }
    });
  
    // Update leaderboard based on predictions (dummy logic for now)
    selectedPredictions.forEach(prediction => {
      leaderboard.forEach(entry => {
        if (prediction === "Team A" && entry.username === "User1") {
          entry.points += 5;  // Give 5 points for correct prediction (example)
        }
      });
    });
  
    renderLeaderboard();
  });
  
  // Add event listeners to prediction buttons
  document.getElementById("bracket-container").addEventListener("click", function(event) {
    if (event.target.tagName === "BUTTON") {
      const selectedTeam = event.target;
      // Toggle background color on button click
      selectedTeam.style.backgroundColor = selectedTeam.style.backgroundColor === "green" ? "" : "green";
    }
  });
  
  // Initialize bracket and leaderboard
  renderBracket();
  renderLeaderboard();
